components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    {
      TodoType:
        {
          properties:
            {
              status: { type: boolean },
              todo: { type: string },
              id: { type: string },
            },
          required: [status, todo, id],
          type: object,
        },
    }
  securitySchemes: {}
info:
  title: '@starter/postgres'
  version: 0.0.1
  description: 'Postgres Starter'
  license: { name: MIT }
  contact: { name: 'hieudoanm ', email: hieumdoan@gmail.com }
openapi: 3.0.0
paths:
  /health:
    {
      get:
        {
          operationId: Get,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              properties: { status: { type: string } },
                              required: [status],
                              type: object,
                            },
                        },
                    },
                },
            },
          tags: [Health],
          security: [],
          parameters: [],
        },
    }
  /todos:
    {
      get:
        {
          operationId: GetTodos,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              items: { $ref: '#/components/schemas/TodoType' },
                              type: array,
                            },
                        },
                    },
                },
            },
          tags: [Todos],
          security: [],
          parameters: [],
        },
      post:
        {
          operationId: CreateTodo,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    {
                      application/json:
                        { schema: { $ref: '#/components/schemas/TodoType' } },
                    },
                },
            },
          tags: [Todos],
          security: [],
          parameters: [],
          requestBody:
            {
              required: true,
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          properties: { todo: { type: string } },
                          required: [todo],
                          type: object,
                        },
                    },
                },
            },
        },
    }
  '/todos/{id}':
    {
      get:
        {
          operationId: GetTodo,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    {
                      application/json:
                        { schema: { $ref: '#/components/schemas/TodoType' } },
                    },
                },
            },
          tags: [Todos],
          security: [],
          parameters:
            [{ in: path, name: id, required: true, schema: { type: string } }],
        },
      put:
        {
          operationId: UpdateTodo,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    {
                      application/json:
                        { schema: { $ref: '#/components/schemas/TodoType' } },
                    },
                },
            },
          tags: [Todos],
          security: [],
          parameters:
            [{ in: path, name: id, required: true, schema: { type: string } }],
          requestBody:
            {
              required: true,
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          properties:
                            {
                              status: { type: boolean },
                              todo: { type: string },
                            },
                          required: [status, todo],
                          type: object,
                        },
                    },
                },
            },
        },
      patch:
        {
          operationId: PatchTodo,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    {
                      application/json:
                        { schema: { $ref: '#/components/schemas/TodoType' } },
                    },
                },
            },
          tags: [Todos],
          security: [],
          parameters:
            [{ in: path, name: id, required: true, schema: { type: string } }],
          requestBody:
            {
              required: true,
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          properties:
                            {
                              status: { type: boolean },
                              todo: { type: string },
                            },
                          type: object,
                        },
                    },
                },
            },
        },
      delete:
        {
          operationId: DeleteTodo,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    {
                      application/json:
                        { schema: { $ref: '#/components/schemas/TodoType' } },
                    },
                },
            },
          tags: [Todos],
          security: [],
          parameters:
            [{ in: path, name: id, required: true, schema: { type: string } }],
        },
    }
servers:
  - { url: / }
