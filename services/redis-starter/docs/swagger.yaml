components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas: {CacheResponse: {properties: {value: {type: string}, key: {type: string}}, required: [value, key], type: object}}
  securitySchemes: {}
info:
  title: redis-starter
  version: 0.0.1
  description: 'Redis Starter'
  license: {name: MIT}
  contact: {name: 'hieudoanm ', email: hieumdoan@gmail.com}
openapi: 3.0.0
paths:
  /cache/get: {post: {operationId: GetCache, responses: {'200': {description: Ok, content: {application/json: {schema: {$ref: '#/components/schemas/CacheResponse'}}}}}, tags: [Cache], security: [], parameters: [], requestBody: {required: true, content: {application/json: {schema: {properties: {key: {type: string}}, required: [key], type: object}}}}}}
  /cache/set: {post: {operationId: SetCache, responses: {'200': {description: Ok, content: {application/json: {schema: {$ref: '#/components/schemas/CacheResponse'}}}}}, tags: [Cache], security: [], parameters: [], requestBody: {required: true, content: {application/json: {schema: {properties: {value: {type: string}, key: {type: string}}, required: [value, key], type: object}}}}}}
servers:
  - {url: /}
