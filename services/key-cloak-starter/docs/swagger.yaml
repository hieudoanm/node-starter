---
  components: 
    examples: {}
    headers: {}
    parameters: {}
    requestBodies: {}
    responses: {}
    schemas: 
      RequestOtpResponse: 
        properties: 
          otp: 
            type: "string"
        required: 
          - "otp"
        type: "object"
      VerifyOtpResponse: 
        properties: 
          verified: 
            type: "boolean"
        required: 
          - "verified"
        type: "object"
      SignInResponse: 
        properties: 
          tokenType: 
            type: "string"
          expiresIn: 
            type: "number"
            format: "double"
          accessToken: 
            type: "string"
        required: 
          - "tokenType"
          - "expiresIn"
          - "accessToken"
        type: "object"
      RefreshTokenResponse: 
        $ref: "#/components/schemas/SignInResponse"
      SignInRequestBody: 
        properties: 
          password: 
            type: "string"
          email: 
            type: "string"
        required: 
          - "password"
          - "email"
        type: "object"
      SignUpResponse: 
        properties: 
          tokenType: 
            type: "string"
          expiresIn: 
            type: "number"
            format: "double"
          accessToken: 
            type: "string"
        required: 
          - "tokenType"
          - "expiresIn"
          - "accessToken"
        type: "object"
      SignUpRequestBody: 
        properties: 
          lastName: 
            type: "string"
          firstName: 
            type: "string"
          password: 
            type: "string"
          email: 
            type: "string"
        required: 
          - "lastName"
          - "firstName"
          - "password"
          - "email"
        type: "object"
      User: 
        properties: 
          access: 
            properties: 
              manage: 
                type: "boolean"
              impersonate: 
                type: "boolean"
              mapRoles: 
                type: "boolean"
              view: 
                type: "boolean"
              manageGroupMembership: 
                type: "boolean"
            required: 
              - "manage"
              - "impersonate"
              - "mapRoles"
              - "view"
              - "manageGroupMembership"
            type: "object"
          notBefore: 
            type: "number"
            format: "double"
          requiredActions: 
            items: 
              type: "string"
            type: "array"
          disableableCredentialTypes: 
            items: 
              type: "string"
            type: "array"
          email: 
            type: "string"
          lastName: 
            type: "string"
          firstName: 
            type: "string"
          emailVerified: 
            type: "boolean"
          totp: 
            type: "boolean"
          enabled: 
            type: "boolean"
          username: 
            type: "string"
          createdTimestamp: 
            type: "number"
            format: "double"
          id: 
            type: "string"
        required: 
          - "access"
          - "notBefore"
          - "requiredActions"
          - "disableableCredentialTypes"
          - "email"
          - "lastName"
          - "firstName"
          - "emailVerified"
          - "totp"
          - "enabled"
          - "username"
          - "createdTimestamp"
          - "id"
        type: "object"
    securitySchemes: {}
  info: 
    title: "key-cloak-starter"
    version: "0.0.1"
    description: "KeyCloak Starter"
    license: 
      name: "MIT"
    contact: 
      name: "hieudoanm "
      email: "hieumdoan@gmail.com"
  openapi: "3.0.0"
  paths: 
    /auth/otp/request: 
      post: 
        operationId: "RequestOTP"
        responses: 
          200: 
            description: "Ok"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/RequestOtpResponse"
        tags: 
          - "Authentication"
          - "OTP"
        security: []
        parameters: []
    /auth/otp/verify: 
      post: 
        operationId: "VerifyOTP"
        responses: 
          200: 
            description: "Ok"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/VerifyOtpResponse"
        tags: 
          - "Authentication"
          - "OTP"
        security: []
        parameters: []
    /auth/profile/refresh: 
      post: 
        operationId: "RefreshAccessToken"
        responses: 
          200: 
            description: "Ok"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/RefreshTokenResponse"
        tags: 
          - "Authentication"
          - "Profile"
        security: []
        parameters: []
    /auth/profile/sign-in: 
      post: 
        operationId: "SignIn"
        responses: 
          200: 
            description: "Ok"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/SignInResponse"
        tags: 
          - "Authentication"
          - "Profile"
        security: []
        parameters: []
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/SignInRequestBody"
    /auth/profile/sign-up: 
      post: 
        operationId: "SignUp"
        responses: 
          200: 
            description: "Ok"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/SignUpResponse"
        tags: 
          - "Authentication"
          - "Profile"
        security: []
        parameters: []
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/SignUpRequestBody"
    /auth/profile/sign-out: 
      post: 
        operationId: "SignOut"
        responses: 
          200: 
            description: "Ok"
            content: 
              application/json: 
                schema: 
                  properties: 
                    isSignedOut: 
                      type: "boolean"
                  required: 
                    - "isSignedOut"
                  type: "object"
        tags: 
          - "Authentication"
          - "Profile"
        security: []
        parameters: []
    /auth/users: 
      post: 
        operationId: "GetUser"
        responses: 
          200: 
            description: "Ok"
            content: 
              application/json: 
                schema: 
                  properties: 
                    user: 
                      allOf: 
                        - 
                          $ref: "#/components/schemas/User"
                      nullable: true
                  required: 
                    - "user"
                  type: "object"
        tags: 
          - "Authentication"
          - "Users"
        security: []
        parameters: []
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                properties: 
                  email: 
                    type: "string"
                required: 
                  - "email"
                type: "object"
  servers: 
    - 
      url: "/"

