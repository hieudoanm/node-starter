---
components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    Todo:
      properties:
        completed:
          type: 'boolean'
        description:
          type: 'string'
        title:
          type: 'string'
        id:
          type: 'string'
      type: 'object'
    CreateResponse:
      properties:
        acknowledged:
          type: 'boolean'
      required:
        - 'acknowledged'
      type: 'object'
    TodoRequestBody:
      properties:
        completed:
          type: 'boolean'
        description:
          type: 'string'
        title:
          type: 'string'
      type: 'object'
    UpdateResponse:
      properties:
        upsertedCount:
          type: 'number'
          format: 'double'
        modifiedCount:
          type: 'number'
          format: 'double'
        matchedCount:
          type: 'number'
          format: 'double'
        acknowledged:
          type: 'number'
          format: 'double'
      required:
        - 'upsertedCount'
        - 'modifiedCount'
        - 'matchedCount'
        - 'acknowledged'
      type: 'object'
    DeleteResponse:
      properties:
        deletedCount:
          type: 'number'
          format: 'double'
        acknowledged:
          type: 'boolean'
      required:
        - 'deletedCount'
        - 'acknowledged'
      type: 'object'
    HelloWorldResponse:
      properties:
        hello:
          type: 'string'
      required:
        - 'hello'
      type: 'object'
  securitySchemes: {}
info:
  title: 'express-starter'
  version: '1.0.0'
  description: 'Express Starter'
  license:
    name: 'MIT'
  contact:
    name: 'hieudoanm '
    email: 'hieumdoan@gmail.com'
openapi: '3.0.0'
paths:
  /health:
    get:
      operationId: 'Get'
      responses:
        200:
          description: 'Ok'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: 'string'
                required:
                  - 'status'
                type: 'object'
      tags:
        - 'Health'
      security: []
      parameters: []
  /todos:
    get:
      operationId: 'GetTodos'
      responses:
        200:
          description: 'Ok'
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Todo'
                type: 'array'
      tags:
        - 'Todos'
      security: []
      parameters: []
    post:
      operationId: 'CreateTodo'
      responses:
        200:
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
      tags:
        - 'Todos'
      security: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoRequestBody'
  /todos/{id}:
    get:
      operationId: 'GetTodo'
      responses:
        200:
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
      tags:
        - 'Todos'
      security: []
      parameters:
        - in: 'path'
          name: 'id'
          required: true
          schema:
            type: 'string'
    patch:
      operationId: 'UpdateTodo'
      responses:
        200:
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResponse'
      tags:
        - 'Todos'
      security: []
      parameters:
        - in: 'path'
          name: 'id'
          required: true
          schema:
            type: 'string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoRequestBody'
    put:
      operationId: 'PatchTodo'
      responses:
        200:
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResponse'
      tags:
        - 'Todos'
      security: []
      parameters:
        - in: 'path'
          name: 'id'
          required: true
          schema:
            type: 'string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoRequestBody'
    delete:
      operationId: 'DeleteTodo'
      responses:
        200:
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
      tags:
        - 'Todos'
      security: []
      parameters:
        - in: 'path'
          name: 'id'
          required: true
          schema:
            type: 'string'
  /users/info:
    get:
      operationId: 'GetUserInfo'
      responses:
        200:
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloWorldResponse'
      tags:
        - 'Users'
      security: []
      parameters: []
  /users/sign-up:
    post:
      operationId: 'SignUp'
      responses:
        200:
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloWorldResponse'
      tags:
        - 'Users'
      security: []
      parameters: []
  /users/sign-in:
    post:
      operationId: 'SignIn'
      responses:
        200:
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloWorldResponse'
      tags:
        - 'Users'
      security: []
      parameters: []
  /users/refresh-token:
    post:
      operationId: 'RefreshToken'
      responses:
        200:
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloWorldResponse'
      tags:
        - 'Users'
      security: []
      parameters: []
  /users/sign-out:
    post:
      operationId: 'SignOut'
      responses:
        200:
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloWorldResponse'
      tags:
        - 'Users'
      security: []
      parameters: []
servers:
  - url: '/'
