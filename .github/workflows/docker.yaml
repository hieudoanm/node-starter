name: Docker

on:
  push:
    branches:
      - master
      - develop
    paths:
      - apis/**
      - connections/**
      - graphql/**
      - messages/**

jobs:
  github-actions:
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: Ubuntu
            version: ubuntu-latest
        node:
          - name: Node.js 16
            version: 16.x
        project:
          - name: APIs - Express
            image-name: apis-express
            working-directory: ./apis/express
          - name: Connections - Socket.io
            image-name: connections-socket
            working-directory: ./connections/socket
          - name: GraphQL - Apollo
            image-name: graphql-apollo
            working-directory: ./graphql/apollo
          - name: Messages - ActiveMQ - Producer
            image-name: active-producer
            working-directory: ./messages/active/producer
          - name: Messages - ActiveMQ - Consumer
            image-name: active-consumer
            working-directory: ./messages/active/consumer
          - name: Messages - Kafka - Producer
            image-name: kafka-producer
            working-directory: ./messages/kafka/producer
          - name: Messages - Kafka - Consumer
            image-name: kafka-consumer
            working-directory: ./messages/kafka/consumer
          - name: Messages - RabbitMQ - Producer
            image-name: rabbit-producer
            working-directory: ./messages/rabbit/producer
          - name: Messages - RabbitMQ - Consumer
            image-name: rabbit-consumer
            working-directory: ./messages/rabbit/consumer
          - name: Messages - Redis - Producer
            image-name: redis-producer
            working-directory: ./messages/redis/producer
          - name: Messages - Redis - Consumer
            image-name: redis-consumer
            working-directory: ./messages/redis/consumer
    name: ${{ matrix.os.name }} - ${{ matrix.node.name }} - ${{ matrix.project.name }}
    runs-on: ${{ matrix.os.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node.version }}
      - name: Branch
        run: echo ${{ github.head_ref || github.ref_name }}
      - name: TimeZone
        uses: szenius/set-timezone@v1.1
        with:
          timezoneLinux: 'Asia/Ho_Chi_Minh'
      - name: Get Date & Time
        id: datetime
        run: |
          echo $(date +'%Y-%m-%dT%H:%M:%S')
          echo "::set-output name=datetime::$(date +'%Y%m%d.%H%M%S')"
      - name: Get Commit SHA
        id: version
        run: |
          echo $(git rev-parse --short HEAD)
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Update Tools
        run: sudo apt-get update && sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
      - name: Add Repository
        run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
      - name: Install Docker
        run: sudo apt-get update && sudo apt-get install docker-ce
      - name: Docker Build
        working-directory: ${{ matrix.project.working-directory }}
        run: docker build . --no-cache -t ${{ matrix.project.image-name }}:$IMAGE_TAG --build-arg node_token=$NODE_TOKEN
        env:
          NODE_TOKEN: ${{ secrets.NODE_TOKEN }}
          IMAGE_TAG: ${{ github.head_ref || github.ref_name }}.${{ steps.datetime.outputs.datetime }}.${{ steps.version.outputs.sha_short }}
